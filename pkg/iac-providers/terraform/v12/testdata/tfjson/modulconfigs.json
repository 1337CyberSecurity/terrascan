{
  "aws_cloudfront_distribution": [
    {
      "id": "aws_cloudfront_distribution.s3-distribution-TLS-v1",
      "name": "s3-distribution-TLS-v1",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudfront/main.tf",
      "type": "aws_cloudfront_distribution",
      "config": {
        "default_cache_behavior": [
          {
            "default_cache_behavior": {
              "allowed_methods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "cached_methods": [
                "GET",
                "HEAD"
              ],
              "forwarded_values": [
                {
                  "forwarded_values": {
                    "cookies": [
                      {
                        "cookies": {
                          "forward": "none"
                        }
                      }
                    ],
                    "query_string": false
                  }
                }
              ],
              "target_origin_id": "local.s3_origin_id",
              "viewer_protocol_policy": "https-only"
            }
          }
        ],
        "enabled": true,
        "ordered_cache_behavior": [
          {
            "ordered_cache_behavior": {
              "allowed_methods": [
                "GET",
                "HEAD",
                "OPTIONS"
              ],
              "cached_methods": [
                "GET",
                "HEAD",
                "OPTIONS"
              ],
              "compress": true,
              "forwarded_values": [
                {
                  "forwarded_values": {
                    "cookies": [
                      {
                        "cookies": {
                          "forward": "none"
                        }
                      }
                    ],
                    "headers": [
                      "Origin"
                    ],
                    "query_string": false
                  }
                }
              ],
              "path_pattern": "/content/immutable/*",
              "target_origin_id": "local.s3_origin_id",
              "viewer_protocol_policy": "allow-all"
            }
          },
          {
            "ordered_cache_behavior": {
              "allowed_methods": [
                "GET",
                "HEAD",
                "OPTIONS"
              ],
              "cached_methods": [
                "GET",
                "HEAD"
              ],
              "forwarded_values": [
                {
                  "forwarded_values": {
                    "cookies": [
                      {
                        "cookies": {
                          "forward": "none"
                        }
                      }
                    ],
                    "query_string": false
                  }
                }
              ],
              "path_pattern": "/content/*",
              "target_origin_id": "local.s3_origin_id",
              "viewer_protocol_policy": "allow-all"
            }
          }
        ],
        "origin": [
          {
            "origin": {
              "domain_name": "aws_s3_bucket.b.bucket_regional_domain_name",
              "origin_id": "local.s3_origin_id",
              "s3_origin_config": [
                {
                  "s3_origin_config": {
                    "origin_access_identity": "origin-access-identity/cloudfront/ABCDEFG1234567"
                  }
                }
              ]
            }
          }
        ],
        "restrictions": [
          {
            "restrictions": {
              "geo_restriction": [
                {
                  "geo_restriction": {
                    "locations": [
                      "US",
                      "CA",
                      "GB",
                      "DE"
                    ],
                    "restriction_type": "whitelist"
                  }
                }
              ]
            }
          }
        ],
        "viewer_certificate": [
          {
            "viewer_certificate": {
              "cloudfront_default_certificate": true,
              "minimum_protocol_version": "TLSv1"
            }
          }
        ]
      }
    }
  ],
  "aws_cloudtrail": [
    {
      "id": "aws_cloudtrail.missing-multi-region",
      "name": "missing-multi-region",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudtrail/main.tf",
      "type": "aws_cloudtrail",
      "config": {
        "include_global_service_events": false,
        "name": "tf-trail-foobar",
        "s3_bucket_name": "some-s3-bucket",
        "s3_key_prefix": "prefix"
      }
    },
    {
      "id": "aws_cloudtrail.false-multi-region",
      "name": "false-multi-region",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudtrail/main.tf",
      "type": "aws_cloudtrail",
      "config": {
        "include_global_service_events": false,
        "is_multi_region_trail": false,
        "name": "tf-trail-foobar",
        "s3_bucket_name": "some-s3-bucket",
        "s3_key_prefix": "prefix"
      }
    },
    {
      "id": "aws_cloudtrail.missing-kms",
      "name": "missing-kms",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudtrail/main.tf",
      "type": "aws_cloudtrail",
      "config": {
        "include_global_service_events": false,
        "name": "missing-kms",
        "s3_bucket_name": "some-s3-bucket",
        "s3_key_prefix": "prefix"
      }
    },
    {
      "id": "aws_cloudtrail.with-kms",
      "name": "with-kms",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudtrail/main.tf",
      "type": "aws_cloudtrail",
      "config": {
        "include_global_service_events": false,
        "kms_key_id": "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
        "name": "with-kms",
        "s3_bucket_name": "some-s3-bucket",
        "s3_key_prefix": "prefix"
      }
    }
  ],
  "aws_ecs_task_definition": [
    {
      "id": "aws_ecs_task_definition.instanceNotInVpc",
      "name": "instanceNotInVpc",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/ecs/main.tf",
      "type": "aws_ecs_task_definition",
      "config": {
        "container_definitions": "${file(\"ecs/service.json\")}",
        "family": "service",
        "network_mode": "bridge"
      }
    }
  ],
  "aws_efs_file_system": [
    {
      "id": "aws_efs_file_system.efsEncryptedWithNoKms",
      "name": "efsEncryptedWithNoKms",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/efs/main.tf",
      "type": "aws_efs_file_system",
      "config": {
        "creation_token": "my-product",
        "encrypted": true,
        "tags": {
          "Name": "encrypted"
        }
      }
    },
    {
      "id": "aws_efs_file_system.efsNotEncrypted",
      "name": "efsNotEncrypted",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/efs/main.tf",
      "type": "aws_efs_file_system",
      "config": {
        "creation_token": "my-product",
        "tags": {
          "Name": "not-encrypted"
        }
      }
    },
    {
      "id": "aws_efs_file_system.efsEncryptedFalse",
      "name": "efsEncryptedFalse",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/efs/main.tf",
      "type": "aws_efs_file_system",
      "config": {
        "creation_token": "my-product",
        "encrypted": false,
        "tags": {
          "Name": "encrypted"
        }
      }
    }
  ],
  "aws_elasticache_cluster": [
    {
      "id": "aws_elasticache_cluster.noMemcachedInElastiCache",
      "name": "noMemcachedInElastiCache",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/elasticcache/main.tf",
      "type": "aws_elasticache_cluster",
      "config": {
        "cluster_id": "cluster-example",
        "engine": "memcached",
        "node_type": "cache.m4.large",
        "num_cache_nodes": 2,
        "parameter_group_name": "default.memcached1.4",
        "port": 11211
      }
    },
    {
      "id": "aws_elasticache_cluster.redis_version_compliant",
      "name": "redis_version_compliant",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/elasticcache/main.tf",
      "type": "aws_elasticache_cluster",
      "config": {
        "cluster_id": "cluster-example",
        "engine": "redis",
        "engine_version": "3.2.10",
        "node_type": "cache.m4.large",
        "num_cache_nodes": 1,
        "parameter_group_name": "default.redis3.2",
        "port": 6379
      }
    },
    {
      "id": "aws_elasticache_cluster.redis_version_non_compliant",
      "name": "redis_version_non_compliant",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/elasticcache/main.tf",
      "type": "aws_elasticache_cluster",
      "config": {
        "cluster_id": "cluster-example",
        "engine": "redis",
        "engine_version": "3.2.0",
        "node_type": "cache.m4.large",
        "num_cache_nodes": 1,
        "parameter_group_name": "default.redis3.2",
        "port": 6379
      }
    }
  ],
  "aws_guardduty_detector": [
    {
      "id": "aws_guardduty_detector.gaurdDutyDisabled",
      "name": "gaurdDutyDisabled",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/guardduty/main.tf",
      "type": "aws_guardduty_detector",
      "config": {
        "enable": false
      }
    }
  ],
  "aws_iam_access_key": [
    {
      "id": "aws_iam_access_key.noAccessKeyForRootAccount",
      "name": "noAccessKeyForRootAccount",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/iam/main.tf",
      "type": "aws_iam_access_key",
      "config": {
        "pgp_key": "keybase:some_person_that_exists",
        "status": "Inactive",
        "user": "root"
      }
    }
  ],
  "aws_kinesis_stream": [
    {
      "id": "aws_kinesis_stream.kinesis_encrypted_but_no_kms_provided",
      "name": "kinesis_encrypted_but_no_kms_provided",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/kinesis/main.tf",
      "type": "aws_kinesis_stream",
      "config": {
        "encryption_type": "KMS",
        "name": "kinesisEncryptedWithKms",
        "retention_period": 48,
        "shard_count": 1,
        "shard_level_metrics": [
          "IncomingBytes",
          "OutgoingBytes"
        ]
      }
    },
    {
      "id": "aws_kinesis_stream.kinesisEncryptedWithKms",
      "name": "kinesisEncryptedWithKms",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/kinesis/main.tf",
      "type": "aws_kinesis_stream",
      "config": {
        "encryption_type": "KMS",
        "kms_key_id": "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
        "name": "kinesisEncryptedWithKms",
        "retention_period": 48,
        "shard_count": 1,
        "shard_level_metrics": [
          "IncomingBytes",
          "OutgoingBytes"
        ],
        "tags": {
          "Environment": "kinesisEncryptedWithKms"
        }
      }
    },
    {
      "id": "aws_kinesis_stream.unencrypted_aws_kinesis_stream",
      "name": "unencrypted_aws_kinesis_stream",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/kinesis/main.tf",
      "type": "aws_kinesis_stream",
      "config": {
        "name": "terraform-kinesis-test",
        "retention_period": 48,
        "shard_count": 1,
        "shard_level_metrics": [
          "IncomingBytes",
          "OutgoingBytes"
        ],
        "tags": {
          "Environment": "test"
        }
      }
    }
  ],
  "aws_kms_key": [
    {
      "id": "aws_kms_key.kmsKeyDisabled",
      "name": "kmsKeyDisabled",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/cloudfront/sub-cloudfront/main.tf",
      "type": "aws_kms_key",
      "config": {
        "description": "KMS key 2",
        "is_enabled": false,
        "tags": {
          "Name": "kmsKeyDisabled",
          "Setup": "self-healing"
        }
      }
    }
  ],
  "aws_load_balancer_policy": [
    {
      "id": "aws_load_balancer_policy.elbWeakCipher",
      "name": "elbWeakCipher",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/elb/main.tf",
      "type": "aws_load_balancer_policy",
      "config": {
        "load_balancer_name": "some-name",
        "policy_attribute": [
          {
            "policy_attribute": {
              "name": "ECDHE-RSA-RC4-SHA",
              "value": "true"
            }
          }
        ],
        "policy_name": "wu-tang-ssl",
        "policy_type_name": "SSLNegotiationPolicyType"
      }
    },
    {
      "id": "aws_load_balancer_policy.elbSsLTsLProtocol",
      "name": "elbSsLTsLProtocol",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/elb/main.tf",
      "type": "aws_load_balancer_policy",
      "config": {
        "load_balancer_name": "some-name",
        "policy_attribute": [
          {
            "policy_attribute": {
              "name": "Protocol-SSLv3",
              "value": "true"
            }
          }
        ],
        "policy_name": "wu-tang-ssl",
        "policy_type_name": "SSLNegotiationPolicyType"
      }
    }
  ],
  "aws_s3_bucket": [
    {
      "id": "aws_s3_bucket.s3VersioningMfaFalse",
      "name": "s3VersioningMfaFalse",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "bucket": "tf-test",
        "server_side_encryption_configuration": [
          {
            "server_side_encryption_configuration": {
              "rule": [
                {
                  "rule": {
                    "apply_server_side_encryption_by_default": [
                      {
                        "apply_server_side_encryption_by_default": {
                          "kms_master_key_id": "some-key-id",
                          "sse_algorithm": "aws:kms"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "versioning": [
          {
            "versioning": {
              "enabled": true,
              "mfa_delete": false
            }
          }
        ]
      }
    },
    {
      "id": "aws_s3_bucket.allUsersReadAccess",
      "name": "allUsersReadAccess",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "acl": "public-read",
        "bucket": "my-tf-test-bucket"
      }
    },
    {
      "id": "aws_s3_bucket.authUsersReadAccess",
      "name": "authUsersReadAccess",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "acl": "authenticated-read",
        "bucket": "my-tf-test-bucket"
      }
    },
    {
      "id": "aws_s3_bucket.allUsersWriteAccess",
      "name": "allUsersWriteAccess",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "acl": "public-write",
        "bucket": "my-tf-test-bucket"
      }
    },
    {
      "id": "aws_s3_bucket.allUsersReadWriteAccess",
      "name": "allUsersReadWriteAccess",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "acl": "public-read-write",
        "bucket": "my-tf-test-bucket"
      }
    },
    {
      "id": "aws_s3_bucket.noS3BucketSseRules",
      "name": "noS3BucketSseRules",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "acl": "private",
        "bucket": "mybucket",
        "tags": {
          "Environment": "Dev",
          "Name": "nos3BucketSseRules"
        }
      }
    },
    {
      "id": "aws_s3_bucket.s3BucketSseRulesWithKmsNull",
      "name": "s3BucketSseRulesWithKmsNull",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "acl": "private",
        "bucket": "mybucket",
        "server_side_encryption_configuration": [
          {
            "server_side_encryption_configuration": {
              "rule": [
                {
                  "rule": {
                    "apply_server_side_encryption_by_default": [
                      {
                        "apply_server_side_encryption_by_default": {
                          "sse_algorithm": "aws:kms"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "tags": {
          "Environment": "Dev",
          "Name": "s3BucketSseRulesWithNoKms"
        }
      }
    },
    {
      "id": "aws_s3_bucket.s3BucketNoWebsiteIndexDoc",
      "name": "s3BucketNoWebsiteIndexDoc",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/s3/main.tf",
      "type": "aws_s3_bucket",
      "config": {
        "acl": "public-read",
        "bucket": "website",
        "server_side_encryption_configuration": [
          {
            "server_side_encryption_configuration": {
              "rule": [
                {
                  "rule": {
                    "apply_server_side_encryption_by_default": [
                      {
                        "apply_server_side_encryption_by_default": {
                          "kms_master_key_id": "some-key-id",
                          "sse_algorithm": "aws:kms"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "website": [
          {
            "website": {
              "error_document": "error.html",
              "index_document": "index.html"
            }
          }
        ]
      }
    }
  ],
  "aws_security_group": [
    {
      "id": "aws_security_group.acme_web",
      "name": "acme_web",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sg/main.tf",
      "type": "aws_security_group",
      "config": {
        "description": "Used in the terraform",
        "egress": [
          {
            "egress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 0,
              "protocol": "-1",
              "to_port": 0
            }
          }
        ],
        "ingress": [
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "19.16.0.0/24"
              ],
              "from_port": 22,
              "protocol": "tcp",
              "to_port": 22
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 80,
              "protocol": "tcp",
              "to_port": 80
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 443,
              "protocol": "tcp",
              "to_port": 443
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 4505,
              "protocol": "tcp",
              "to_port": 4505
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 4506,
              "protocol": "-1",
              "to_port": 4506
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 3020,
              "protocol": "tcp",
              "to_port": 3020
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 61621,
              "protocol": "-1",
              "to_port": 61621
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 7001,
              "protocol": "tcp",
              "to_port": 7001
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 9000,
              "protocol": "-1",
              "to_port": 9000
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 8000,
              "protocol": "tcp",
              "to_port": 8000
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 8080,
              "protocol": "-1",
              "to_port": 8080
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 636,
              "protocol": "tcp",
              "to_port": 636
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 1434,
              "protocol": "tcp",
              "to_port": 1434
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 1434,
              "protocol": "udp",
              "to_port": 1434
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 135,
              "protocol": "tcp",
              "to_port": 135
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 1433,
              "protocol": "tcp",
              "to_port": 1433
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 11214,
              "protocol": "tcp",
              "to_port": 11214
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 11214,
              "protocol": "udp",
              "to_port": 11214
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 11215,
              "protocol": "tcp",
              "to_port": 11215
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 11215,
              "protocol": "udp",
              "to_port": 11215
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 27018,
              "protocol": "tcp",
              "to_port": 27018
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 3306,
              "protocol": "tcp",
              "to_port": 3306
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 137,
              "protocol": "tcp",
              "to_port": 137
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 137,
              "protocol": "udp",
              "to_port": 137
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 138,
              "protocol": "tcp",
              "to_port": 138
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 138,
              "protocol": "udp",
              "to_port": 138
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 139,
              "protocol": "tcp",
              "to_port": 139
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 139,
              "protocol": "udp",
              "to_port": 139
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 2484,
              "protocol": "tcp",
              "to_port": 2484
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 2484,
              "protocol": "udp",
              "to_port": 2484
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 5432,
              "protocol": "tcp",
              "to_port": 5432
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 5432,
              "protocol": "udp",
              "to_port": 5432
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 3000,
              "protocol": "tcp",
              "to_port": 3000
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 8140,
              "protocol": "tcp",
              "to_port": 8140
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 161,
              "protocol": "udp",
              "to_port": 161
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 2382,
              "protocol": "tcp",
              "to_port": 2382
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 2383,
              "protocol": "tcp",
              "to_port": 2383
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 9090,
              "protocol": "tcp",
              "to_port": 9090
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 3389,
              "protocol": "tcp",
              "to_port": 3389
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 9042,
              "protocol": "tcp",
              "to_port": 9042
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 7000,
              "protocol": "tcp",
              "to_port": 7000
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 7199,
              "protocol": "tcp",
              "to_port": 7199
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 61620,
              "protocol": "tcp",
              "to_port": 61620
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 8888,
              "protocol": "tcp",
              "to_port": 8888
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 9160,
              "protocol": "tcp",
              "to_port": 9160
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 9200,
              "protocol": "tcp",
              "to_port": 9200
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 9300,
              "protocol": "tcp",
              "to_port": 9300
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 389,
              "protocol": "tcp",
              "to_port": 389
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 389,
              "protocol": "udp",
              "to_port": 389
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 11211,
              "protocol": "tcp",
              "to_port": 11211
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 11211,
              "protocol": "udp",
              "to_port": 11211
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 27017,
              "protocol": "tcp",
              "to_port": 27017
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 1521,
              "protocol": "tcp",
              "to_port": 1521
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 2483,
              "protocol": "tcp",
              "to_port": 2483
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 2483,
              "protocol": "udp",
              "to_port": 2483
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 6379,
              "protocol": "tcp",
              "to_port": 6379
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 6379,
              "protocol": "-1",
              "to_port": 0
            }
          },
          {
            "ingress": {
              "cidr_blocks": [
                "0.0.0.0/0",
                "192.164.0.0/24"
              ],
              "from_port": 4506,
              "protocol": "-1",
              "to_port": 0
            }
          }
        ],
        "name": "acme_web",
        "tags": {
          "Name": "acme_web"
        },
        "vpc_id": "some_dummy_vpc"
      }
    },
    {
      "id": "aws_security_group.defaultSGNotRestrictsAllTraffic",
      "name": "defaultSGNotRestrictsAllTraffic",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sg/main.tf",
      "type": "aws_security_group",
      "config": {
        "description": "Used in the terraform",
        "name": "default",
        "tags": {
          "Name": "default"
        },
        "vpc_id": "some_dummy_vpc"
      }
    }
  ],
  "aws_sqs_queue": [
    {
      "id": "aws_sqs_queue.sqsSseDisabled",
      "name": "sqsSseDisabled",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sqs/main.tf",
      "type": "aws_sqs_queue",
      "config": {
        "name": "terraform-example-queue"
      }
    },
    {
      "id": "aws_sqs_queue.sqsQueueExposed",
      "name": "sqsQueueExposed",
      "source": "pkg/iac-providers/terraform/v12/testdata/moduleconfigs/sqs/main.tf",
      "type": "aws_sqs_queue",
      "config": {
        "kms_data_key_reuse_period_seconds": 300,
        "kms_master_key_id": "alias/aws/sqs",
        "name": "terraform-example-queue",
        "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [{\n    \"Sid\":\"Queue1_AnonymousAccess_AllActions_WhitelistIP\",\n    \"Effect\": \"Allow\",\n    \"Principal\": \"*\",\n    \"Action\": \"sqs:*\",\n    \"Resource\": \"arn:aws:sqs:*:111122223333:queue1\"\n  }] \n}\n"
      }
    }
  ]
}
